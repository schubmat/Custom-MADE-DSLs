/*
 * generated by Xtext 2.16.0
 */
package org.xtext.example.mydsl.validation

import org.eclipse.xtext.validation.Check
// import org.eclipse.xtext.Alternatives
import org.xtext.example.mydsl.myDsl.MyDslPackage
import org.xtext.example.mydsl.myDsl.Feed
import org.xtext.example.mydsl.myDsl.URL
import java.net.URI
import java.net.URISyntaxException

//import org.eclipse.xtext.util.internal.Log

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class MyDslValidator extends AbstractMyDslValidator {
	
	public static val INVALID_NAME = 'invalidName'
	
	@Check
	def checkNumberOfArticles(Feed feed) {
		if (feed.articles.size < 2) {			
			warning('There should be at least two articles!', MyDslPackage.Literals.FEED__ARTICLES)			
		}
	}
	
	def checkWellFormedUrl(URL url) {

		try {
			val uri = new URI(url.name)
			uri.toURL
		} catch (Exception e) {
			warning('The URL is not well-formed!', MyDslPackage.Literals.URL__NAME)
		}
		
		
	}
	
}

